[1mdiff --git a/module/actor/character-sheet.js b/module/actor/character-sheet.js[m
[1mindex 50e4762..37fb5a1 100644[m
[1m--- a/module/actor/character-sheet.js[m
[1m+++ b/module/actor/character-sheet.js[m
[36m@@ -1,8 +1,8 @@[m
[32m+[m[32mimport { findByID } from "../util.js";[m
 import { LanguageSheetHelper } from '../language-helper.js';[m
 import { Merp1eBaseSheet } from './base-sheet.js';[m
 import { Merp1eRollChooserApplication } from '../apps/roll-chooser.js';[m
 import { Merp1eEffect } from '../active-effect.js';[m
[31m-import { getFuncName } from "../util.js";[m
 [m
 class Merp1eActionTab {[m
   static getData(sheetData, sheet) {[m
[36m@@ -17,6 +17,8 @@[m [mclass Merp1eActionTab {[m
     sheetData.combat.combatants.forEach((token) => {[m
       sheetData.combatants[token.id] = token.name;[m
     });[m
[32m+[m
[32m+[m[32m    sheetData.attacks = sheet.actor.attacks;[m
     return sheetData;[m
   }[m
 [m
[36m@@ -25,73 +27,40 @@[m [mclass Merp1eActionTab {[m
   }[m
 [m
   static activateListeners(html, sheet) {[m
[31m-    html.find(".action").on("click", ".action-control", this.onClickActionControl.bind(sheet));[m
[32m+[m[32m    html.find(".action").on("click", ".action-control", this.onClickControl.bind(sheet));[m
   }[m
 [m
[31m-  static async onClickActionControl(event) {[m
[32m+[m[32m  static async onClickControl(event) {[m
     event.preventDefault();[m
     const target = event.currentTarget;[m
     const action = target.dataset.action;[m
[31m-    const tab = target.closest(".tab");[m
[31m-[m
[32m+[m[32m    const li = target.closest("li");[m
[32m+[m[32m    //const item = li.dataset.itemId ? this.actor.items.get(li.dataset.itemId) : null;[m
[32m+[m[32m    //const effect = li.dataset.effectId ? item.effects.get(li.dataset.itemId) : null;[m
[32m+[m[32m    const attack = this.actor.attacks.find((at) => at.item.id == li.dataset.itemId && at.effect.id == li.dataset.effectId);[m
[32m+[m[41m    [m
     switch ( action ) {[m
[31m-    case "prepare-to-cast":[m
[31m-      const chooser = tab.getElementsByClassName("action-chooser");[m
[31m-      chooser[0].value = "castSpell";[m
[31m-      this.submit();[m
[31m-      break;[m
[32m+[m[32m      case "prepare-to-cast":[m
[32m+[m[32m        const tab = target.closest(".tab");[m
[32m+[m[32m        const chooser = tab.getElementsByClassName("action-chooser");[m
[32m+[m[32m        chooser[0].value = "castSpell";[m
[32m+[m[32m        this.submit();[m
[32m+[m[32m        break;[m
[32m+[m[32m      case "unsheathe":[m
[32m+[m[32m          const place = target.dataset.place;[m
[32m+[m[32m          return await attack.unsheathe(place == "dominant hand");[m
[32m+[m[32m      case "sheathe":[m
[32m+[m[32m          return await attack.sheathe();[m
     }[m
   }[m
 }[m
 [m
[31m-/**[m
[31m- * Extend the basic ActorSheet with some very simple modifications[m
[31m- * @extends {ActorSheet}[m
[31m- */[m
[31m-export class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
[31m-[m
[31m-  /** @override */[m
[31m-  static get defaultOptions() {[m
[31m-    return mergeObject(super.defaultOptions, {[m
[31m-      classes: ["merp1e", "sheet", "actor"],[m
[31m-      width: 700,[m
[31m-      height: 600,[m
[31m-      tabs: [{ navSelector: ".sheet-tabs", contentSelector: ".sheet-body", initial: "description" }][m
[31m-    });[m
[31m-  }[m
[31m-[m
[31m-  /** @override */[m
[31m-  get template() {[m
[31m-    const path = "systems/merp1e/templates/actor";[m
[31m-    // Return a single sheet for all item types.[m
[31m-    //return `${path}/item-sheet.html`;[m
[31m-    // Alternatively, you could use the following return statement to do a[m
[31m-    // unique item sheet by type, like `weapon-sheet.html`.[m
[31m-[m
[31m-    return `${path}/${this.actor.data.type}-sheet.html`;[m
[31m-  }[m
[31m-[m
[31m-  _prepareCharacter(sheetData) {[m
[31m-    if (this.actor.data.type != 'character') {[m
[31m-      throw "Character sheet is trying to edit something htat is not a character";[m
[31m-      return sheetData;[m
[31m-    }[m
[31m-[m
[31m-    sheetData.avaliableRaces = sheetData.rules.getAvaliableRaces();[m
[31m-    sheetData.actorRaceId = sheetData.rules.getItemByTypeIdName("race", this.actor.race.data?.originalId, this.actor.race.name)?.id;[m
[31m-    [m
[31m-    sheetData.avaliableProfessions = sheetData.rules.getAvaliableProfessions();[m
[31m-    sheetData.actorProfessionId = sheetData.rules.getItemByTypeIdName("profession", this.actor.profession.data?.originalId, this.actor.profession.name)?.id;[m
[31m-[m
[31m-    if(this.actor.data.skills = null) {[m
[31m-      sheetData.sheetOrder ={}[m
[31m-    } else {[m
[31m-      sheetData.sheetOrder = game.merp1e.Merp1eRules.skill.generateSheetOrder(this.actor.skills);[m
[31m-    }[m
[31m-[m
[31m-    sheetData.effectList = this.object.effects.reduce((acc, effect) => {[m
[32m+[m[32mclass Merp1eEffectsTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
[32m+[m[32m    sheetData.effectTypesLabels = Object.values(Merp1eEffect.registeredClasses).reduce((acc, cls) => { acc[cls.effectName] = cls.label; return acc; }, {});[m
[32m+[m[32m    sheetData.effectList = sheet.object.effects.reduce((acc, effect) => {[m
       let origin = effect.data.origin.split(".");[m
[31m-      let actorID = origin[1];[m
[32m+[m[32m      //let actorID = origin[1];[m
       let itemID = origin[3] || null;[m
       let item = null;[m
       let itemName = "no item";[m
[36m@@ -103,28 +72,53 @@[m [mexport class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
           itemName = "Rougue item " + itemID;[m
         }[m
       }[m
[31m-      // acc.push({[m
[31m-      //   name: effect.name,[m
[31m-      //   condition: effect.condition.conditionName,[m
[31m-      //   isActive: effect.condition.isActive(effect, this.object),[m
[31m-      //   reason: effect.condition.reason(effect, this.object),[m
[31m-      //   item: itemName,[m
[31m-      // });[m
       return acc[m
     }, []);[m
 [m
[31m-    this.fillAdolescenceSkillRanks(sheetData); // XXX nÃ£o funciona quando troca de raÃ§a[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static activateListeners(html, sheet) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mclass Merp1eEquipmentsTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
[32m+[m[32m    sheetData.weightType = {[m
[32m+[m[32m      total: "MERP1E.Location.Total",[m
[32m+[m[32m      wearing: "MERP1E.Location.Wearing"[m
[32m+[m[32m    };[m
 [m
[32m+[m[32m    sheetData.equipmentsByLocation = Merp1eEquipmentsTab.getEquipmentsByLocation(sheet.actor);[m
     return sheetData;[m
   }[m
 [m
[31m-  getEquipmentsInLocation(location) {[m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static activateListeners(html, sheet) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getEquipmentsInLocation(actor, location) {[m
     let res = [];[m
[31m-    Object.values(this.actor.equipments).forEach((itm) => {[m
[32m+[m[32m    Object.values(actor.equipments).forEach((itm) => {[m
       if(itm.data.data.location == location) {[m
         res.push(itm);[m
         if(itm.data.data.isContainer) {[m
[31m-          let subItems = this.getEquipmentsInLocation(itm.id);[m
[32m+[m[32m          let subItems = Merp1eEquipmentsTab.getEquipmentsInLocation(itm.id);[m
           subItems.forEach((sbi) => res.push(sbi));[m
         }[m
       }[m
[36m@@ -132,31 +126,40 @@[m [mexport class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
     return res;[m
   }[m
 [m
[31m-  getEquipmentsByLocation() {[m
[32m+[m[32m  getEquipmentsByLocation(actor) {[m
     let res = [];[m
[31m-    this.getEquipmentsInLocation("wearing").forEach((itm) => res.push(itm));[m
[31m-    this.getEquipmentsInLocation("carrying").forEach((itm) => res.push(itm));[m
[31m-    this.getEquipmentsInLocation("stored").forEach((itm) => res.push(itm));[m
[32m+[m[32m    Merp1eEquipmentsTab.getEquipmentsInLocation(actor, "wearing").forEach((itm) => res.push(itm));[m
[32m+[m[32m    Merp1eEquipmentsTab.getEquipmentsInLocation(actor, "carrying").forEach((itm) => res.push(itm));[m
[32m+[m[32m    Merp1eEquipmentsTab.getEquipmentsInLocation(actor, "stored").forEach((itm) => res.push(itm));[m
     let ids = res.reduce((acc, itm) => { acc.push(itm.id); return acc;}, []);[m
[31m-    const orphans = Object.values(this.actor.equipments).filter((itm) => {[m
[32m+[m[32m    Object.values(actor.equipments).filter((itm) => {[m
       return !ids.includes(itm.id);[m
     }).forEach((itm) => res.push(itm));;[m
     return res;[m
   }[m
[31m-    /** @override */[m
[31m-  getData() {[m
[31m-    let sheetData = super.getData();[m
[32m+[m[32m}[m
 [m
[31m-    sheetData.settings = game.merp1e.Merp1eRules.settings;[m
[31m-    sheetData.rules = game.merp1e.Merp1eRules;[m
[31m-    sheetData.specialTypesIcons = game.merp1e.Merp1eRules.special.types.reduce((acc, spc) => { acc[spc.id] = spc.icon; return acc; }, {});[m
[31m-    sheetData.specialTypes = game.merp1e.Merp1eRules.special.types.reduce((acc, spc) => { acc[spc.id] = spc.label; return acc; }, {});[m
[31m-    sheetData.effectTypesLabels = Object.values(Merp1eEffect.registeredClasses).reduce((acc, cls) => { acc[cls.effectName] = cls.label; return acc; }, {});[m
[31m-    sheetData.weightType = {[m
[31m-      total: "MERP1E.Location.Total",[m
[31m-      wearing: "MERP1E.Location.Wearing"[m
[31m-    };[m
 [m
[32m+[m[32mclass Merp1eHealthTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static activateListeners(html, sheet) {[m
[32m+[m[32m    html.find(".health").on("click", ".health-control", this.onClickControl.bind(sheet));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mclass Merp1eMoneyTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
     sheetData.money = sheetData.rules.currencies.reduce((acc, cur) => {[m
       let items = Object.values(this.actor.equipments).filter((itm) => itm.data.data.unitaryValueCurrency == cur.id && itm.value > 0 );[m
       acc.push( {[m
[36m@@ -173,12 +176,67 @@[m [mexport class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
     }, []);[m
     sheetData.moneyTotal = sheetData.money.reduce((acc, cur) => acc + cur.total * cur.unitaryValue, 0);[m
     sheetData.moneyTotalCurrency = sheetData.money.find((cur) => cur.unitaryValue == 1);[m
[31m-    sheetData.equipmentsByLocation = this.getEquipmentsByLocation();[m
[31m-    sheetData = this._prepareCharacter(sheetData);[m
[31m-    sheetData = Merp1eActionTab.getData(sheetData, this);[m
     return sheetData;[m
   }[m
 [m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mclass Merp1eSkillsTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
[32m+[m[32m    if(sheet.actor.data.skills = null) {[m
[32m+[m[32m      sheetData.sheetOrder ={}[m
[32m+[m[32m    } else {[m
[32m+[m[32m      sheetData.sheetOrder = game.merp1e.Merp1eRules.skill.generateSheetOrder(sheet.actor.skills);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static activateListeners(html, sheet) {[m
[32m+[m[32m    html.find(".skills").on("click", ".skill-control", this.onClickControl.bind(sheet));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m    event.preventDefault();[m
[32m+[m[32m    const target = event.currentTarget;[m
[32m+[m[32m    const action = target.dataset.action;[m
[32m+[m[32m    const item = target.closest(".item");[m
[32m+[m[32m    const skillID = item?.dataset?.itemId;[m
[32m+[m[32m    const skill = this.actor.getEmbeddedDocument("Item", skillID);[m
[32m+[m
[32m+[m[32m    switch ( action ) {[m
[32m+[m[32m    case "remove-all":[m
[32m+[m[32m      // remove all skills with zero ranks[m
[32m+[m[32m      let idsToRemove = this.actor.items.filter(item => item.type == "skill" && item.data.data.ranks == 0).reduce((acc, item) => { acc.push(item.id); return acc; }, []);[m
[32m+[m[32m      await this.actor.deleteEmbeddedDocuments("Item", idsToRemove);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case "add-all":[m
[32m+[m[32m      await this.actor.createEmbeddedDocuments("Item", this.actor.getDefaultSkills());[m
[32m+[m[32m      break;[m
[32m+[m[32m    case "duplicate":[m
[32m+[m[32m      await this.actor.createEmbeddedDocuments("Item", [{ name: game.i18n.localize("MERP1E.Item.New") + " " + skill.name, type: skill.type, data: skill.data.data }], { renderSheet: true });[m
[32m+[m[32m      break;[m
[32m+[m[32m    case "roll-maneuver":[m
[32m+[m[32m      if (event.ctrlKey) {[m
[32m+[m[32m        Merp1eRollChooserApplication.create({actorID: skill.parent.id, skillID : skill.id});[m[41m  [m
[32m+[m[32m      } else {[m
[32m+[m[32m        game.merp1e.Merp1eRules.rollManeuver(skill);[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
   fillAdolescenceSkillRanks(data) {[m
     if("race" in data.data) {[m
       // Fill adolescence skill ranks[m
[36m@@ -208,12 +266,146 @@[m [mexport class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
       }[m
     }[m
   }[m
[32m+[m[32m}[m
 [m
[31m-  /**[m
[31m- * Handle editing an existing Owned Item for the Actor[m
[31m- * @param {Event} event   The originating click event[m
[31m- * @private[m
[32m+[m[32mclass Merp1eSpecialsTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
[32m+[m[32m    sheetData.specialTypesIcons = game.merp1e.Merp1eRules.special.types.reduce((acc, spc) => { acc[spc.id] = spc.icon; return acc; }, {});[m
[32m+[m[32m    sheetData.specialTypes = game.merp1e.Merp1eRules.special.types.reduce((acc, spc) => { acc[spc.id] = spc.label; return acc; }, {});[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static activateListeners(html, sheet) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mclass Merp1eSpellsTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static activateListeners(html, sheet) {[m
[32m+[m[32m    html.find(".spell").on("click", ".spell-control", this.onClickControl.bind(sheet));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m    event.preventDefault();[m
[32m+[m[32m    const a = event.currentTarget;[m
[32m+[m[32m    const action = a.dataset.action;[m
[32m+[m
[32m+[m[32m    switch ( action ) {[m
[32m+[m[32m      case "reset-pp":[m
[32m+[m[32m        let inputElement = event.currentTarget.parentNode.getElementsByTagName("input")[0];[m
[32m+[m[32m        inputElement.value = this.object.powerPointsMaximum;[m
[32m+[m[32m        this.submit();[m
[32m+[m[32m        break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mclass Merp1eXPTab {[m
[32m+[m[32m  static getData(sheetData, sheet) {[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static updateObject(event, formData, sheet) {[m
[32m+[m[32m    return formData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static activateListeners(html, sheet) {[m
[32m+[m[32m    html.find(".xp").on("click", ".xp-control", this.onClickControl.bind(sheet));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static async onClickControl(event) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Extend the basic ActorSheet with some very simple modifications[m
[32m+[m[32m * @extends {ActorSheet}[m
  */[m
[32m+[m[32mexport class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
[32m+[m
[32m+[m[32m  /** @override */[m
[32m+[m[32m  static get defaultOptions() {[m
[32m+[m[32m    return mergeObject(super.defaultOptions, {[m
[32m+[m[32m      classes: ["merp1e", "sheet", "actor"],[m
[32m+[m[32m      width: 700,[m
[32m+[m[32m      height: 600,[m
[32m+[m[32m      tabs: [{ navSelector: ".sheet-tabs", contentSelector: ".sheet-body", initial: "description" }][m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /** @override */[m
[32m+[m[32m  get template() {[m
[32m+[m[32m    const path = "systems/merp1e/templates/actor";[m
[32m+[m[32m    // Return a single sheet for all item types.[m
[32m+[m[32m    //return `${path}/item-sheet.html`;[m
[32m+[m[32m    // Alternatively, you could use the following return statement to do a[m
[32m+[m[32m    // unique item sheet by type, like `weapon-sheet.html`.[m
[32m+[m
[32m+[m[32m    return `${path}/${this.actor.data.type}-sheet.html`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _prepareCharacter(sheetData) {[m
[32m+[m[32m    if (this.actor.data.type != 'character') {[m
[32m+[m[32m      throw "Character sheet is trying to edit something that is not a character"; // XXX[m
[32m+[m[32m      return sheetData;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    sheetData.avaliableRaces = sheetData.rules.getAvaliableRaces();[m
[32m+[m[32m    sheetData.actorRaceId = sheetData.rules.getItemByTypeIdName("race", this.actor.race.data?.originalId, this.actor.race.name)?.id;[m
[32m+[m[41m    [m
[32m+[m[32m    sheetData.avaliableProfessions = sheetData.rules.getAvaliableProfessions();[m
[32m+[m[32m    sheetData.actorProfessionId = sheetData.rules.getItemByTypeIdName("profession", this.actor.profession.data?.originalId, this.actor.profession.name)?.id;[m
[32m+[m
[32m+[m[32m    sheetData = Merp1eActionTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eEffectsTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eEquipmentsTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eHealthTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eMoneyTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eSkillsTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eSpecialsTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eSpellsTab.getData(sheetData, this);[m
[32m+[m[32m    sheetData = Merp1eXPTab.getData(sheetData, this);[m
[32m+[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m    /** @override */[m
[32m+[m[32m  getData() {[m
[32m+[m[32m    let sheetData = super.getData();[m
[32m+[m
[32m+[m[32m    sheetData.settings = game.merp1e.Merp1eRules.settings;[m
[32m+[m[32m    sheetData.rules = game.merp1e.Merp1eRules;[m
[32m+[m
[32m+[m[32m    sheetData = this._prepareCharacter(sheetData);[m
[32m+[m
[32m+[m[32m    return sheetData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handle editing an existing Owned Item for the Actor[m
[32m+[m[32m   * @param {Event} event   The originating click event[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
   async _onItemWear(event) {[m
     event.preventDefault();[m
     const li = event.currentTarget.closest(".item");[m
[36m@@ -241,11 +433,18 @@[m [mexport class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
 [m
     html.find('.item-wear').click(this._onItemWear.bind(this));[m
     html.find('.item-unwear').click(this._onItemUnwear.bind(this));[m
[31m-    html.find(".skills").on("click", ".skill-control", this.onClickSkillControl.bind(this));[m
[31m-    html.find(".spells").on("click", ".spell-control", this.onClickSpellControl.bind(this));[m
[31m-    html.find(".health").on("click", ".health-control", this.onClickHealthControl.bind(this));[m
[31m-    html.find(".xp").on("click", ".xp-control", this.onClickXPControl.bind(this));[m
[32m+[m[41m    [m
     Merp1eActionTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eSkillsTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eActionTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eEffectsTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eEquipmentsTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eHealthTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eMoneyTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eSkillsTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eSpecialsTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eSpellsTab.activateListeners(html, this);[m
[32m+[m[32m    Merp1eXPTab.activateListeners(html, this);[m
   }[m
 [m
   /** @override */[m
[36m@@ -364,72 +563,40 @@[m [mexport class Merp1eCharacterSheet extends Merp1eBaseSheet {[m
     formData = await this._updateRace(formData);[m
     formData = await this._updateProfession(formData);[m
     formData = await this._updateEmbeddedItems(formData);[m
[31m-    formData = await Merp1eActionTab.updateObject(event, formData, this)[m
[31m-[m
[31m-    //this.actor.health.consolidateDamage();[m
[31m-    //this.updateHealth();[m
[32m+[m[32m    formData = await Merp1eActionTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eActionTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eActionTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eEffectsTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eEquipmentsTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eHealthTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eMoneyTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eSkillsTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eSkillsTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eSpecialsTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eSpellsTab.updateObject(event, formData, this);[m
[32m+[m[32m    formData = await Merp1eXPTab.updateObject(event, formData, this);[m
 [m
     return await this.object.update(formData);[m
   }[m
 [m
[31m-  async onClickSkillControl(event) {[m
[31m-    event.preventDefault();[m
[31m-    const target = event.currentTarget;[m
[31m-    const action = target.dataset.action;[m
[31m-    const item = target.closest(".item");[m
[31m-    const skillID = item?.dataset?.itemId;[m
[31m-    const skill = this.actor.getEmbeddedDocument("Item", skillID);[m
[31m-[m
[31m-    switch ( action ) {[m
[31m-    case "remove-all":[m
[31m-      // remove all skills with zero ranks[m
[31m-      let idsToRemove = this.actor.items.filter(item => item.type == "skill" && item.data.data.ranks == 0).reduce((acc, item) => { acc.push(item.id); return acc; }, []);[m
[31m-      await this.actor.deleteEmbeddedDocuments("Item", idsToRemove);[m
[31m-      break;[m
[31m-    case "add-all":[m
[31m-      await this.actor.createEmbeddedDocuments("Item", this.actor.getDefaultSkills());[m
[31m-      break;[m
[31m-    case "duplicate":[m
[31m-      await this.actor.createEmbeddedDocuments("Item", [{ name: game.i18n.localize("MERP1E.Item.New") + " " + skill.name, type: skill.type, data: skill.data.data }], { renderSheet: true });[m
[31m-      break;[m
[31m-    case "roll-maneuver":[m
[31m-      if (event.ctrlKey) {[m
[31m-        Merp1eRollChooserApplication.create({actorID: skill.parent.id, skillID : skill.id});  [m
[31m-      } else {[m
[31m-        game.merp1e.Merp1eRules.rollManeuver(skill);[m
[31m-      }[m
[31m-      break;[m
[31m-    }[m
[31m-  }[m
[31m-[m
[31m-  async onClickSpellControl(event) {[m
[31m-    event.preventDefault();[m
[31m-    const a = event.currentTarget;[m
[31m-    const action = a.dataset.action;[m
[31m-[m
[31m-    switch ( action ) {[m
[31m-    case "reset-pp":[m
[31m-      let inputElement = event.currentTarget.parentNode.getElementsByTagName("input")[0];[m
[31m-      inputElement.value = this.object.powerPointsMaximum;[m
[31m-      this.submit();[m
[31m-      break;[m
[31m-    }[m
[31m-  }[m
[31m-[m
[32m+[m[32m  /**** HTML methods */[m
   addValueToElement(name, n) {[m
     let value = document.getElementsByName(name)[0].value;[m
     if(value == "" || value == "0") return;[m
     this.setValueToElement(name, parseInt(value) + n);[m
   }[m
[32m+[m
   isDisabledByElement(name) {[m
     return document.getElementsByName(name)[0].disabled;[m
   }[m
[32m+[m
   setValueToElement(name, n) {[m
     document.getElementsByName(name)[0].value = n;[m
   }[m
   getValueFromElement(name) {[m
     return document.getElementsByName(name)[0].value;[m
   }[m
[32m+[m
   setCheckedToElement(name, n) {[m
     let element = document.getElementsByName(name)[0];[m
     [m
